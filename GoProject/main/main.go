package main

import (
	"fmt"
)

/*
การส่งข้อมูลแบบสไลซ์ (slice) เข้าไปในฟังก์ชันจะทำให้สามารถเปลี่ยนแปลงข้อมูลต้นทางได้ เนื่องจากสไลซ์เป็นการชี้ไปยังอาร์เรย์อยู่แล้ว เมื่อมีการเปลี่ยนแปลงข้อมูลในสไลซ์ ก็จะส่งผลให้ข้อมูลในอาร์เรย์ที่สไลซ์นั้นชี้อยู่เปลี่ยนแปลงไปด้วย จึงไม่จำเป็นต้องส่งพอยเตอร์ของอาร์เรย์เข้าไป
*/

// ฟังก์ชัน Pass_Data_With_Slice รับพารามิเตอร์เป็นสไลซ์ของ int
func Pass_Data_With_Slice(arr []int) {
	// เปลี่ยนค่าในสไลซ์ตำแหน่งแรกเป็น 20000
	arr[0] = 20000

	// แสดงค่าในสไลซ์
	fmt.Println("the slice is as follows", arr)
}

func main() {
	// กำหนดค่าเริ่มต้นให้สไลซ์ res
	res := []int{10, 20, 30}

	// ส่งสไลซ์ res เข้าไปในฟังก์ชัน Pass_Data_With_Slice
	Pass_Data_With_Slice(res)

	// แสดงค่าในสไลซ์ res ซึ่งถูกเปลี่ยนแปลงแล้ว
	fmt.Println(res)
}

/*
จากผลลัพธ์ จะเห็นได้ว่าหลังจากเรียกใช้ฟังก์ชัน Pass_Data_With_Slice แล้ว ค่าในสไลซ์ res ถูกเปลี่ยนแปลงจาก [10 20 30] เป็น [20000 20 30] เนื่องจากการเปลี่ยนแปลงค่าในสไลซ์ภายในฟังก์ชันส่งผลต่ออาร์เรย์ที่สไลซ์นั้นชี้อยู่โดยตรง
การใช้สไลซ์จึงมีข้อได้เปรียบกว่าการส่งอาร์เรย์โดยตรง เนื่องจากประหยัดหน่วยความจำมากกว่า และสามารถเปลี่ยนแปลงข้อมูลต้นทางได้โดยตรง
*/

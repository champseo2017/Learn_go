package main

import "fmt"

/*
โปรแกรม 10.4 แสดงการสร้างพอยน์เตอร์โดยใช้ฟังก์ชัน `new()` ในภาษา Go ฟังก์ชัน `new()` จะจองหน่วยความจำสำหรับค่าของประเภทข้อมูลที่ระบุและส่งคืนพอยน์เตอร์ที่ชี้ไปยังหน่วยความจำนั้น

ในโปรแกรม มีการสร้างพอยน์เตอร์ `a` โดยใช้ฟังก์ชัน `new(int)` ซึ่งจะจองหน่วยความจำสำหรับค่า `int` และส่งคืนพอยน์เตอร์ที่ชี้ไปยังหน่วยความจำนั้น จากนั้นกำหนดค่า 15 ให้กับตำแหน่งที่พอยน์เตอร์ชี้ไปโดยใช้เครื่องหมายดอกจัน (`*`)

โปรแกรมแสดงค่าที่พอยน์เตอร์ชี้ไป (`*a`) และแสดงที่อยู่ของพอยน์เตอร์ (`a`)

นอกจากการใช้ฟังก์ชัน `new()` แล้ว ยังสามารถสร้างพอยน์เตอร์โดยใช้คีย์เวิร์ด `var` ได้ โดยประกาศตัวแปรพอยน์เตอร์ด้วยประเภทพอยน์เตอร์ เช่น `var a *int` และกำหนดที่อยู่ของตัวแปรให้กับพอยน์เตอร์ เช่น `a = &x`
*/

func main() {
    a := new(int)   // สร้างพอยน์เตอร์ a โดยใช้ฟังก์ชัน new() สำหรับประเภท int
    *a = 15         // กำหนดค่า 15 ให้กับตำแหน่งที่พอยน์เตอร์ a ชี้ไป
    
    fmt.Println(*a) // แสดงค่าที่พอยน์เตอร์ a ชี้ไป (15)
    fmt.Println(a)  // แสดงที่อยู่ของพอยน์เตอร์ a
    
    x := 20         // ประกาศตัวแปร x และกำหนดค่าเป็น 20
    b := &x          // กำหนดที่อยู่ของตัวแปร x ให้กับพอยน์เตอร์ b
    
    fmt.Println(*b) // แสดงค่าที่พอยน์เตอร์ b ชี้ไป (20)
    fmt.Println(b)  // แสดงที่อยู่ของพอยน์เตอร์ b

    *b = 13
    fmt.Println(x) 
}
/* 
คำอธิบาย:
- สร้างพอยน์เตอร์ `a` โดยใช้ฟังก์ชัน `new(int)` ซึ่งจะจองหน่วยความจำสำหรับค่า `int` และส่งคืนพอยน์เตอร์ที่ชี้ไปยังหน่วยความจำนั้น
- กำหนดค่า 15 ให้กับตำแหน่งที่พอยน์เตอร์ `a` ชี้ไปโดยใช้เครื่องหมายดอกจัน (`*`)
- แสดงค่าที่พอยน์เตอร์ `a` ชี้ไป (`*a`) ซึ่งจะแสดงค่า 15 และแสดงที่อยู่ของพอยน์เตอร์ `a`
- ประกาศตัวแปร `x` และกำหนดค่าเป็น 20
- ประกาศตัวแปรพอยน์เตอร์ `b` สำหรับประเภท `int` โดยใช้คีย์เวิร์ด `var`
- กำหนดที่อยู่ของตัวแปร `x` ให้กับพอยน์เตอร์ `b` โดยใช้เครื่องหมาย `&`
- แสดงค่าที่พอยน์เตอร์ `b` ชี้ไป (`*b`) ซึ่งจะแสดงค่า 20 และแสดงที่อยู่ของพอยน์เตอร์ `b`

โปรแกรมนี้แสดงการสร้างพอยน์เตอร์ทั้งโดยใช้ฟังก์ชัน `new()` และการประกาศตัวแปรพอยน์เตอร์ด้วยคีย์เวิร์ด `var` ซึ่งให้ผลลัพธ์เหมือนกัน คือสามารถเข้าถึงและแก้ไขค่าที่พอยน์เตอร์ชี้ไปได้
*/
package main

import (
	"fmt"
)

/*
เกี่ยวกับ For Loop ในภาษา Go:

1. For Loop ใช้สำหรับการทำงานแบบวนซ้ำ (iterative tasks)
2. ประกอบด้วย 3 ส่วนหลัก: ส่วนเริ่มต้น (initialization), ส่วนเงื่อนไข (condition), และส่วนปรับปรุงค่า (update)
3. ส่วนเริ่มต้นใช้กำหนดค่าเริ่มต้นให้กับตัวแปรที่ใช้ในการวนลูป
4. ส่วนเงื่อนไขใช้กำหนดเงื่อนไขในการวนลูป ลูปจะทำงานต่อไปเรื่อยๆ จนกว่าเงื่อนไขจะเป็นเท็จ
5. ส่วนปรับปรุงค่าใช้ปรับปรุงค่าของตัวแปรที่ใช้ในการวนลูป เพื่อให้เงื่อนไขในส่วนเงื่อนไขเป็นเท็จในที่สุด

ตัวอย่างโค้ดแสดงการใช้ For Loop ในการวนลูปโดยใช้ตัวแปร `j` เป็นตัวนับ เริ่มต้นจาก 0 และเพิ่มค่าทีละ 1 จนกว่า `j` จะมีค่ามากกว่าหรือเท่ากับ `i` ในแต่ละรอบของการวนลูป จะแสดงข้อความและค่าของ `j`

For Loop เป็นโครงสร้างควบคุมที่สำคัญในการทำงานแบบวนซ้ำ โดยมีการกำหนดค่าเริ่มต้น เงื่อนไข และการปรับปรุงค่าของตัวแปรที่ใช้ในการวนลูป เพื่อควบคุมจำนวนรอบและเงื่อนไขในการวนลูป
*/

func For_Loop_Example(i int) {
	// วนลูปโดยใช้ตัวแปร j เป็นตัวนับ เริ่มต้นจาก 0 และเพิ่มค่าทีละ 1 จนกว่า j จะมีค่ามากกว่าหรือเท่ากับ i
	for j := 0; j < i; j++ {
		// แสดงข้อความและค่าของ j ในแต่ละรอบของการวนลูป
		fmt.Println("The value of j in this iteration is", j)
	}
}

func main() {
	// For_Loop_Example จากแพ็คเกจ control_flow_test โดยส่งค่า 10 เป็นอาร์กิวเมนต์
	For_Loop_Example(10)
}

/*

 */

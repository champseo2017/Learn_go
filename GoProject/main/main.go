package main

import "fmt"

/*
Go เราสามารถ Assign ฟังก์ชันให้กับตัวแปรได้

Go เราสามารถ Assign ฟังก์ชันให้กับตัวแปรได้ นั่นหมายความว่าตัวแปรสามารถเก็บฟังก์ชันไว้เหมือนกับเก็บค่าชนิดข้อมูลอื่นๆ เช่น int, string เป็นต้น เมื่อตัวแปรถูก Assign ด้วยฟังก์ชัน เราสามารถเรียกใช้ฟังก์ชันผ่านตัวแปรนั้นได้
*/

func add(a, b int) int {
	return a + b
}

func main() {
	// Assign ฟังก์ชัน add ให้กับตัวแปร sum
	sum := add

	// เรียกใช้ฟังก์ชัน add ผ่านตัวแปร sum
	result := sum(5, 3)
	fmt.Println("Result:", result)
}

/*
1. สร้างฟังก์ชัน `add` ที่รับ Argument สองตัวเป็น `a` และ `b` และ Return ผลรวมของ `a` และ `b`
2. ในฟังก์ชัน `main` สร้างตัวแปร `sum` และ Assign ฟังก์ชัน `add` ให้กับตัวแปร `sum`
3. เรียกใช้ฟังก์ชัน `add` ผ่านตัวแปร `sum` โดยส่ง Argument เป็น 5 และ 3 และเก็บผลลัพธ์ไว้ในตัวแปร `result`
4. แสดงผลค่าของตัวแปร `result`


เราสามารถ Assign ฟังก์ชัน `add` ให้กับตัวแปร `sum` ได้ และเรียกใช้ฟังก์ชัน `add` ผ่านตัวแปร `sum` โดยส่ง Argument เข้าไปเหมือนกับเรียกใช้ฟังก์ชันโดยตรง ซึ่งแสดงให้เห็นว่าตัวแปรสามารถเก็บฟังก์ชันไว้และเรียกใช้งานได้ในภายหลัง

การที่ตัวแปรสามารถ Assign ด้วยฟังก์ชันได้ ทำให้เราสามารถส่งฟังก์ชันเป็น Argument ให้กับฟังก์ชันอื่น หรือเก็บฟังก์ชันไว้ในตัวแปร เพื่อเรียกใช้งานได้อย่างยืดหยุ่นและ Dynamic มากขึ้น
*/

package main

import "fmt"

/*

ใน Go, struct สองตัวจะเท่ากันก็ต่อเมื่อฟิลด์ที่ตรงกันทั้งหมดมีค่าเท่ากัน เราสามารถเปรียบเทียบความเท่ากันของ struct ได้โดยใช้เครื่องหมาย `==`

ตัวอย่างเช่น ในโปรแกรมที่ให้มา มีการสร้าง struct ชื่อ `city` และ instance ของ `city` สองตัว ได้แก่ `c1` และ `c2` ที่มีค่าเริ่มต้นของฟิลด์เหมือนกัน เมื่อเปรียบเทียบความเท่ากันด้วยคำสั่ง `if c1 == c2` ผลลัพธ์จะเป็น `true` และโปรแกรมจะแสดงข้อความ "City list c1 and c2 are same"

การเปรียบเทียบความเท่ากันของ struct มีประโยชน์ในหลายสถานการณ์ เช่น การค้นหาข้อมูล การตรวจสอบความถูกต้องของข้อมูล หรือการเปรียบเทียบ struct ในการทำงานของโปรแกรม ช่วยให้เราสามารถตรวจสอบได้ว่า struct สองตัวมีค่าเหมือนกันหรือไม่
*/
// สร้าง struct ชื่อ city ที่มีฟิลด์ city1, city2, และ city3 เป็น string
type city struct {
	city1 string
	city2 string
	city3 string
}
func main() {
	// สร้าง instance ของ city สองตัว (c1 และ c2) ที่มีค่าเริ่มต้นของฟิลด์เหมือนกัน
	c1 := city{"Pune", "Delhi", "Lucknow"}
	c2 := city{"Pune", "Delhi", "Lucknow"}

	// เปรียบเทียบความเท่ากันของ c1 และ c2
	if c1 == c2 {
		// ถ้า c1 และ c2 เท่ากัน (ฟิลด์ทั้งหมดเท่ากัน) ให้แสดงข้อความนี้
		fmt.Println("City list c1 and c2 are same")
	} else {
		// ถ้า c1 และ c2 ไม่เท่ากัน ให้แสดงข้อความนี้
		fmt.Println("City list c1 and c2 are not same")
	}
}
/* 

*/
package main

import "fmt"

/*
ในภาษา Go สามารถใช้เครื่องหมาย & (ampersand) เพื่อเข้าถึงที่อยู่หน่วยความจำของตัวแปรใดๆ ได้ ในโปรแกรม 10.1 ที่อยู่ของตัวแปร x ถูกเข้าถึงโดยใช้ &x และกำหนดให้กับตัวแปร a โปรแกรมจะแสดงค่าและที่อยู่ของตัวแปร x
ตัวแปร a เรียกว่าตัวแปรพอยน์เตอร์ เพราะเก็บที่อยู่หน่วยความจำของตัวแปร สามารถเข้าถึงค่าของตัวแปรพอยน์เตอร์ (ที่อยู่หน่วยความจำ) โดยใช้เครื่องหมายดอกจัน (*) การเข้าถึงค่าที่อยู่ภายใต้พอยน์เตอร์โดยใช้ * เรียกว่าการ dereference หรือ indirection โปรแกรม 10.2 จะแสดงค่า 15
เนื่องจากตัวแปรพอยน์เตอร์เก็บที่อยู่ของค่าใดๆ การแก้ไขค่าของตัวแปรพอยน์เตอร์จะสะท้อนในค่าจริง

*/

func main() {
    x := 15         // ประกาศตัวแปร x และกำหนดค่าเป็น 15
    a := &x         // ประกาศตัวแปรพอยน์เตอร์ a และกำหนดให้เก็บที่อยู่ของ x
    
    fmt.Println("Value of x:", x)       // แสดงค่าของ x
    fmt.Println("Address of x:", a)     // แสดงที่อยู่ของ x ผ่านตัวแปรพอยน์เตอร์ a
    
    fmt.Println("Value at address of x:", *a)  // แสดงค่าที่ที่อยู่ของ x โดยใช้ * เพื่อ dereference พอยน์เตอร์ a
    
    *a = 20         // แก้ไขค่าที่ที่อยู่ของ x ผ่านพอยน์เตอร์ a เป็น 20
    fmt.Println("New value of x:", x)   // แสดงค่าใหม่ของ x หลังจากแก้ไขผ่านพอยน์เตอร์
}
/* 

*/
package main

import (
	"fmt"
	"reflect"
)

/*
สรุปสั้นๆ เกี่ยวกับประเภทของพอยน์เตอร์ในภาษา Go:

1. ตัวแปรพอยน์เตอร์ที่สร้างโดยใช้ `:=` จะถูกอนุมานประเภทเป็น `*int`
2. สามารถแสดงประเภทของตัวแปรได้โดยใช้แพคเกจ `reflect`
3. ที่อยู่ของประเภท `T` สามารถกำหนดให้กับประเภท `*T` เท่านั้น หากไม่ตรงกันจะเกิด compilation error
4. ตัวแปรพอยน์เตอร์ที่สร้างโดยใช้คีย์เวิร์ด `var` แต่ไม่ได้กำหนดที่อยู่ จะชี้ไปที่พอยน์เตอร์ `nil`
5. การพยายามเข้าถึงค่าของพอยน์เตอร์ `nil` จะทำให้เกิด panic และแสดงข้อผิดพลาดในรันไทม์

การใช้ประเภทพอยน์เตอร์ในภาษา Go ต้องระวังเรื่องการกำหนดที่อยู่ให้ตรงกับประเภทของพอยน์เตอร์ และต้องตรวจสอบว่าพอยน์เตอร์ไม่ใช่ `nil` ก่อนเข้าถึงค่าผ่านมัน เพื่อหลีกเลี่ยงข้อผิดพลาดในการคอมไพล์และรันไทม์
*/

func main() {
    x := 15         // ประกาศตัวแปร x และกำหนดค่าเป็น 15
    a := &x         // ประกาศตัวแปรพอยน์เตอร์ a และกำหนดให้เก็บที่อยู่ของ x
    
    fmt.Println(reflect.TypeOf(a))  // แสดงประเภทของตัวแปรพอยน์เตอร์ a โดยใช้แพคเกจ reflect
    
    //var b *float64  // ประกาศตัวแปรพอยน์เตอร์ b สำหรับประเภท float64
    // b = &x       // ไม่สามารถกำหนดที่อยู่ของตัวแปร int ให้กับพอยน์เตอร์ float64 ได้ (เกิด compilation error)
    
    var c *int      // ประกาศตัวแปรพอยน์เตอร์ c สำหรับประเภท int โดยไม่ได้กำหนดที่อยู่
    fmt.Println(c)  // แสดงค่าของพอยน์เตอร์ c ซึ่งจะเป็น <nil>
    
    // fmt.Println(*c)  // พยายามเข้าถึงค่าของพอยน์เตอร์ nil จะทำให้เกิด panic (runtime error)
}
/* 

*/
package main

import "fmt"

/*
อินเทอร์เฟซใน Go เป็นนามธรรมอย่างบริสุทธิ์ เมธอดของอินเทอร์เฟซไม่มีเนื้อหา และเราไม่สามารถสร้างค่า/ออบเจกต์ของอินเทอร์เฟซได้ จุดประสงค์ของอินเทอร์เฟซคือให้บางประเภทนำไปใช้
การใช้อินเทอร์เฟซใน Go เป็นแบบโดยปริยาย ไม่มีคีย์เวิร์ดเฉพาะ หากประเภทมีเมธอดทั้งหมดที่กำหนดไว้ในอินเทอร์เฟซ ก็จะใช้อินเทอร์เฟซนั้นโดยอัตโนมัติ
เราสามารถสร้างตัวแปรของอินเทอร์เฟซและกำหนดค่าการใช้จริงให้กับตัวแปรนั้นได้ หากไม่กำหนดค่าการใช้จริง ตัวแปรอินเทอร์เฟซจะเป็น nil และการเรียกใช้เมธอดบนตัวแปรนั้นจะทำให้เกิด panic
*/

type Executor interface {
    Execute()
}

type Thread struct{}

func (t Thread) Execute() {
    fmt.Println("Executing thread")
}

func main() {
    exe := Executor(Thread{})
    exe.Execute()
}
/* 
ในฟังก์ชัน main เราได้รวมการประกาศตัวแปร exe กับการกำหนดค่าเริ่มต้นในบรรทัดเดียวกัน โดยใช้การกำหนดค่าแบบสั้น (short variable declaration) := และแปลงค่า Thread{} ให้เป็นชนิด Executor อย่างชัดเจน
*/
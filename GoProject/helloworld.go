package main

import "fmt"

/*
ในภาษา Go นั้น map ถือเป็นชนิดข้อมูลแบบ reference type หมายความว่าเมื่อเรามีการกำหนดให้ map หนึ่งเท่ากับ map อีกตัวหนึ่ง ทั้งสองตัวแปรจะชี้ไปยังโครงสร้างข้อมูลเดียวกัน ดังนั้นการเปลี่ยนแปลงที่เกิดขึ้นกับตัวแปรหนึ่งจะส่งผลให้อีกตัวแปรหนึ่งมีการเปลี่ยนแปลงตามไปด้วย
*/

func main() {
	// สร้างและกำหนดค่าเริ่มต้นของ map
	var my_map = map[int]string {
		1: "US",
		44: "UK",
		81: "Japan",
		91: "India",
		972: "Israel",
	}
	// แสดงค่าของ map ตั้งต้น
	fmt.Println("Original Map:\n", my_map)
	// กำหนดให้ new_map ชี้ไปยังโครงสร้างข้อมูลเดียวกับ my_map
	new_map := my_map
	// เพิ่มและแก้ไขค่าใน new_map
	new_map[86] = "China"
	new_map[33] = "France"
	// แสดงค่าของ new_map หลังการเปลี่ยนแปลง
	fmt.Println("New map:\n", new_map)
	 // แสดงค่าของ my_map ซึ่งมีการเปลี่ยนแปลงตามไปด้วย
	fmt.Println("Modification in old map:\n", my_map)
}

/* 
1. เริ่มต้นด้วยการนำเข้าโมดูล "fmt" เพื่อใช้งานฟังก์ชันพื้นฐาน เช่น การแสดงผลข้อความ
2. ในฟังก์ชัน main() เราสร้าง map ชื่อ my_map โดยกำหนดให้ key เป็น int และ value เป็น string แล้วกำหนดค่าเริ่มต้นของ map ด้วยคู่ key-value หลายๆ คู่
3. แสดงค่าเริ่มต้นของ my_map โดยใช้ fmt.Println()
4. กำหนดให้ new_map ชี้ไปยังโครงสร้างข้อมูลเดียวกับ my_map โดยใช้การกำหนดค่า `new_map := my_map`
5. เพิ่มและแก้ไขค่าใน new_map โดยเพิ่ม key 86 กับ value "China" และ key 33 กับ value "France"
6. แสดงค่าของ new_map หลังการเปลี่ยนแปลง
7. แสดงค่าของ my_map ซึ่งมีการเปลี่ยนแปลงตามไปด้วย เนื่องจากทั้งสองตัวแปรชี้ไปยังโครงสร้างข้อมูลเดียวกัน

แสดงให้เห็นว่าเมื่อเรากำหนดให้ new_map เท่ากับ my_map แล้ว การเปลี่ยนแปลงที่เกิดขึ้นกับ new_map จะส่งผลให้ my_map มีการเปลี่ยนแปลงตามไปด้วย เนื่องจากทั้งสองตัวแปรชี้ไปยังโครงสร้างข้อมูลเดียวกัน ซึ่งเป็นลักษณะของ reference type ใน Go
*/
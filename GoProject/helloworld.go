package main

import "fmt"

/*
อธิบายเกี่ยวกับคำสั่ง continue ในภาษา Go ซึ่งใช้เพื่อข้ามการทำงานในส่วนของลูปเมื่อเงื่อนไขบางอย่างเป็นจริง และย้ายการควบคุมกลับไปยังจุดเริ่มต้นของลูปเพื่อเริ่มรอบถัดไป คำสั่ง continue จะถูกใช้เมื่อต้องการข้ามส่วนที่เหลือของลูปและกลับไปที่จุดเริ่มต้นของลูปเพื่อเริ่มรอบใหม่ ตัวอย่างโปรแกรมแสดงการใช้คำสั่ง continue เพื่อข้ามการพิมพ์เลข 7 และย้ายการควบคุมกลับไปที่จุดเริ่มต้นของลูปเพื่อเริ่มรอบถัดไป
*/

func main() {
	var a int = 1
	for a <= 10 {
		if a == 7 {
			a++
			continue
		}
		fmt.Printf("Number is: %d\n", a)
		a++
	}
}

/*
1. `package main` และ `import "fmt"` เป็นส่วนของการประกาศแพ็คเกจและการนำเข้าแพ็คเกจ fmt สำหรับใช้งานฟังก์ชันพิมพ์ข้อความ
2. `func main()` เป็นฟังก์ชันหลักที่จะถูกเรียกเมื่อโปรแกรมเริ่มทำงาน
3. `var a int = 1` ประกาศตัวแปร a เป็นจำนวนเต็มและกำหนดค่าเริ่มต้นเป็น 1
4. `for a <= 10` เป็นลูป for ที่ทำงานซ้ำจนกว่า a จะมากกว่าหรือเท่ากับ 10
5. `if a == 7` ตรวจสอบว่า a มีค่าเท่ากับ 7 หรือไม่
6. `a++` เพิ่มค่า a ขึ้น 1 หากเงื่อนไขในบรรทัดที่ 5 เป็นจริง
7. `continue` ข้ามคำสั่งที่เหลือในลูปและกลับไปที่จุดเริ่มต้นของลูปเพื่อเริ่มรอบใหม่
8. `fmt.Printf("Number is: %d\n", a)` พิมพ์ข้อความ "Number is: " ตามด้วยค่า a
9. `a++` เพิ่มค่า a ขึ้น 1 หลังจากแต่ละรอบของลูป

เมื่อรันโปรแกรมนี้ ผลลัพธ์ที่ได้จะเป็น:
Number is: 1
Number is: 2
Number is: 3
Number is: 4
Number is: 5
Number is: 6
Number is: 8
Number is: 9
Number is: 10
*/
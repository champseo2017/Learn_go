package main

import "fmt"

/*
แนวคิดของ Slices
Slice คือส่วนหนึ่งของ array ที่สามารถปรับขนาดได้ ทำให้มีความยืดหยุ่นมากกว่า arrays Slice สามารถเข้าถึงข้อมูลผ่านดัชนีและมีความยาวได้เช่นเดียวกับ arrays Slice เป็นโครงสร้างข้อมูลที่มีน้ำหนักเบาและห่อหุ้มส่วนหนึ่งของ array Slice ถูกสร้างขึ้นโดยใช้ฟังก์ชัน make Slice เป็นลำดับขององค์ประกอบที่มีความยาวแปรผันได้ซึ่งเก็บองค์ประกอบที่มีชนิดเดียวกัน และไม่อนุญาตให้เก็บองค์ประกอบที่มีชนิดต่างกันใน slice เดียวกัน ตำแหน่งดัชนีแรกใน slice จะเป็น 0 เสมอ และตำแหน่งสุดท้ายจะเป็น (ความยาวของ slice - 1)
*/

func main() {
	// สร้าง array ของ integers
	arr := [5]int{1, 2, 3, 4, 5}
	// สร้าง slice จาก array โดยใช้ slice expression
	slice := arr[1:4] // slice ประกอบด้วยเลข 2, 3, 4
	// สร้าง slice โดยใช้ฟังก์ชัน make
	sliceMake := make([]int, 5) // สร้าง slice ของ integers ที่มีความยาว 5
	// เข้าถึงองค์ประกอบใน slice ผ่านดัชนี
	fmt.Println(slice[0]) // แสดงผลองค์ประกอบแรกของ slice
	// วนลูปผ่านองค์ประกอบใน slice
	for i := 0; i < len(slice); i++ {
		fmt.Printf("Element at index %d: %d\n", i, slice[i])
	}

	// เปลี่ยนแปลงขนาดของ slice
	slice = append(slice, 6) // เพิ่มองค์ประกอบ 6 เข้าไปใน slice
	println(slice)
	println(sliceMake)
}

/* 
- สร้าง array ของ integers ชื่อ `arr` ที่มี 5 องค์ประกอบ
- สร้าง slice จาก array โดยใช้ slice expression `arr[1:4]` ซึ่งจะให้ slice ที่ประกอบด้วยเลข 2, 3 และ 4
- สร้าง slice โดยใช้ฟังก์ชัน `make` ด้วยความยาว 5 และชนิดข้อมูลเป็น int
- เข้าถึงองค์ประกอบใน slice ผ่านดัชนี เช่น `slice[0]` เพื่อแสดงผลองค์ประกอบแรกของ slice
- วนลูปผ่านองค์ประกอบใน slice โดยใช้ for loop และฟังก์ชัน `len` เพื่อดึงความยาวของ slice
- เปลี่ยนแปลงขนาดของ slice โดยใช้ฟังก์ชัน `append` เพื่อเพิ่มองค์ประกอบใหม่เข้าไปใน slice
*/
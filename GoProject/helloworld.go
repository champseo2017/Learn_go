package main

import "fmt"

/*
ในภาษา Go เราสามารถดึงค่าจากแมปโดยใช้ key ได้ด้วยรูปแบบดังนี้:
map_name[key]
ถ้า key ไม่มีอยู่ในแมปที่กำหนด มันจะคืนค่า zero value ซึ่งก็คือ nil แต่ถ้า key มีอยู่ในแมปที่กำหนด มันจะคืนค่าที่เกี่ยวข้องกับ key นั้น
*/

func main() {
	// สร้างและกำหนดค่าเริ่มต้นให้กับแมป
	var my_map = map[int]string {
		1: "US",
		91: "India",
		86: "China",
		44: "UK",
	}
	fmt.Println("Original Map:", my_map)
	// ดึงค่าโดยใช้ key
	v1 := my_map[91]
	v2 := my_map[93]
	v3 := my_map[44]

	fmt.Println("Value of key[91]:", v1)
	fmt.Println("Value of key[93]:", v2)
	fmt.Println("Value of key[44]:", v3)
}

/* 
1. เราสร้างแมป `my_map` และกำหนดค่าเริ่มต้นให้กับแมปโดยใช้ `map[int]string` ซึ่งหมายความว่า key เป็นชนิด `int` และ value เป็นชนิด `string`
2. เราพิมพ์แมปเดิมออกมาโดยใช้ `fmt.Println("Original Map:", my_map)`
3. เราดึงค่าจากแมปโดยใช้ key ด้วยรูปแบบ `map_name[key]` และกำหนดค่าให้กับตัวแปร `v1`, `v2`, `v3`
   - `v1 := my_map[91]` จะดึงค่าของ key `91` ซึ่งก็คือ `"India"`
   - `v2 := my_map[93]` จะดึงค่าของ key `93` ซึ่งไม่มีอยู่ในแมป ดังนั้นจะได้ค่า zero value คือ `""`
   - `v3 := my_map[44]` จะดึงค่าของ key `44` ซึ่งก็คือ `"UK"`
4. เราพิมพ์ค่าของตัวแปร `v1`, `v2`, `v3` ออกมาโดยใช้ `fmt.Println()`

จากผลลัพธ์จะเห็นได้ว่าเมื่อเราดึงค่าจากแมปโดยใช้ key ที่มีอยู่ (`91` และ `44`) เราจะได้ค่าที่เกี่ยวข้องกับ key นั้น (`"India"` และ `"UK"` ตามลำดับ) แต่เมื่อเราดึงค่าจากแมปโดยใช้ key ที่ไม่มีอยู่ (`93`) เราจะได้ค่า zero value ซึ่งก็คือ `""` (empty string)

นี่เป็นวิธีการดึงค่าจากแมปโดยใช้ key อย่างง่ายดายด้วยรูปแบบ `map_name[key]` ซึ่งจะคืนค่าที่เกี่ยวข้องกับ key นั้นถ้ามีอยู่ในแมป หรือคืนค่า zero value ถ้าไม่มีอยู่ในแมป
*/
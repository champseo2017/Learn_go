package main

import "fmt"

/*
ในภาษา Go อาร์เรย์เป็นชนิดข้อมูลแบบหนึ่งมิติ แต่เราสามารถสร้างอาร์เรย์หลายมิติได้โดยการประกอบชนิดข้อมูลเข้าด้วยกัน อาร์เรย์ในภาษา Go เป็นชนิดข้อมูลที่เก็บสมาชิกที่มีชนิดข้อมูลเดียวกัน เช่น อาร์เรย์ของจำนวนเต็ม หรืออาร์เรย์ของสตริง
*/

func main() {
	// ประกาศอาร์เรย์สองมิติขนาด 2x3 ของจำนวนเต็ม
	var a [2][3]int
	// วนลูปเพื่อกำหนดค่าให้กับสมาชิกในอาร์เรย์
	for i := 0; i < 2; i++ {
		for j := 0; j < 3; j++ {
			a[i][j] = i + j
		}
	}
	fmt.Println("2D Array:", a)
	/* 
		2D Array: [[0 1 2] [1 2 3]]
		ในตัวอย่างข้างต้น เราประกาศอาร์เรย์สองมิติ a ขนาด 2x3 ของจำนวนเต็ม จากนั้นใช้ลูปซ้อนกันเพื่อกำหนดค่าให้กับสมาชิกในอาร์เรย์ โดยค่าของสมาชิกจะเป็นผลรวมของ i และ j ซึ่งเป็นตัวแปรที่ใช้ในการวนลูป

		เมื่อเราแสดงผลอาร์เรย์ a จะได้ผลลัพธ์เป็นอาร์เรย์สองมิติที่มีค่าสมาชิกตามที่เรากำหนด
	*/
	b := [3][3]string {
		{"Pune", "Mumbai", "Nagpur"},
        {"Lucknow", "Gorakhpur", "Varanasi"},
        {"Ahmedabad", "Vadodara", "Rajkot"},
	}
	fmt.Println("3D Array:", b)
}

/*
3D Array: [[Pune Mumbai Nagpur] [Lucknow Gorakhpur Varanasi] [Ahmedabad Vadodara Rajkot]]

ในตัวอย่างนี้ เราประกาศอาร์เรย์สามมิติ a ขนาด 3x3 ของสตริง โดยกำหนดค่าเริ่มต้นให้กับสมาชิกในอาร์เรย์เลย

เมื่อเราแสดงผลอาร์เรย์ a จะได้ผลลัพธ์เป็นอาร์เรย์สามมิติที่มีค่าสมาชิกตามที่เรากำหนด

สรุปได้ว่า เราสามารถสร้างอาร์เรย์หลายมิติในภาษา Go ได้โดยการประกอบชนิดข้อมูลอาร์เรย์เข้าด้วยกัน และสามารถกำหนดค่าให้กับสมาชิกในอาร์เรย์ได้ทั้งแบบวนลูปและแบบกำหนดค่าโดยตรง
*/
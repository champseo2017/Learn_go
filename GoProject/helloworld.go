package main

import "fmt"

/*
Go เรามีโครงสร้างข้อมูลชนิดหนึ่งที่เรียกว่า "map" ซึ่งทำหน้าที่เป็นพจนานุกรมหรือดิกชันนารี (dictionary) โดยเก็บข้อมูลแบบคู่ของ key และ value ตัวอย่างเช่น map[int]string จะเป็น map ที่ใช้ int เป็น key และ string เป็น value
ในตัวอย่างโค้ดนี้ แสดงให้เห็นวิธีการลบ key ออกจาก map โดยใช้ฟังก์ชัน delete() ฟังก์ชันนี้ไม่มีการคืนค่า และจะไม่ทำอะไรเลยหากไม่พบ key ที่ต้องการลบใน map นั้น
*/

func main() {
	// สร้างและเริ่มต้น map
	var my_map = map[int]string {
		1: "US",
		91: "India",
		86: "China",
		44: "UK",
	}
	// แสดงค่าใน map ก่อนลบ
	fmt.Println("Map before deletion:\n", my_map)

	// ลบ key 1 และ 44 ออกจาก map
	delete(my_map, 1)
	delete(my_map, 44)
	// แสดงค่าใน map หลังลบแล้ว
	fmt.Println("\nMap after deletion:\n", my_map)
}

/* 
1. เริ่มต้นด้วยการนำเข้าโมดูล "fmt" เพื่อใช้งานฟังก์ชันพื้นฐาน เช่น การแสดงผลข้อความ
2. ในฟังก์ชัน main() เราสร้าง map ชื่อ my_map โดยกำหนดให้ key เป็น int และ value เป็น string แล้วกำหนดค่าเริ่มต้นของ map ด้วยคู่ key-value หลายๆ คู่
3. แสดงค่าใน map ก่อนการลบ โดยใช้ fmt.Println()
4. ลบ key 1 และ 44 ออกจาก map โดยใช้ฟังก์ชัน delete(my_map, key)
5. แสดงค่าใน map หลังการลบแล้ว เราจะเห็นว่า key 1 และ 44 หายไปจาก map แล้ว

จากตัวอย่างนี้ แสดงให้เห็นวิธีการลบ key ออกจาก map ในภาษา Go โดยใช้ฟังก์ชัน delete() ซึ่งเป็นฟังก์ชันBuilt-inที่ช่วยให้สามารถจัดการ map ได้อย่างสะดวก
*/
package main

import "fmt"

/*
อาร์เรย์ในภาษา Go เป็นชุดข้อมูลที่มีขนาดคงที่และเก็บข้อมูลประเภทเดียวกัน โดยเก็บข้อมูลแบบเรียงลำดับและสามารถเข้าถึงได้ด้วยดัชนี สามารถสร้างอาร์เรย์ได้โดยใช้คีย์เวิร์ด var หรือใช้การประกาศแบบย่อ การเข้าถึงข้อมูลในอาร์เรย์ทำได้โดยใช้วิธี a[index] โดยที่ a คือตัวแปรอาร์เรย์ ดัชนีของอาร์เรย์เริ่มต้นที่ 0 และสิ้นสุดที่ n-1 โดยที่ n คือความยาวของอาร์เรย์

สามารถกำหนดค่าเริ่มต้นให้กับอาร์เรย์ได้ด้วย array literal หากไม่ได้กำหนดค่าเริ่มต้น ค่าเริ่มต้นจะเป็น 0 และสามารถใช้ ellipses (...) แทนการระบุความยาวของอาร์เรย์ได้ ซึ่งคอมไพเลอร์จะระบุความยาวตามจำนวนข้อมูลที่กำหนดในการประกาศอาร์เรย์

ภาษา Go มีฟังก์ชันในตัวอย่าง len() ที่ใช้ในการหาความยาวของอาร์เรย์ นอกจากนี้ยังสามารถกำหนดและดึงค่าของข้อมูลในอาร์เรย์ได้ด้วยวิธี array[index] = value และ array[index] ตามลำดับ

อาร์เรย์ในภาษา Go เป็นชนิดข้อมูลแบบหนึ่งมิติ แต่สามารถประกอบกันเป็นโครงสร้างข้อมูลหลายมิติได้ และเนื่องจากภาษา Go เป็นภาษาแบบ statically typed จึงไม่อนุญาตให้ใส่ข้อมูลต่างชนิดกันในอาร์เรย์เดียวกัน

สามารถใช้ for loop เพื่อวนซ้ำอาร์เรย์ได้ และภาษา Go ยังมี range operator ที่ส่งคืนดัชนีและค่าของแต่ละข้อมูลในอาร์เรย์เมื่อใช้ใน for loop อีกด้วย

เมื่อส่งอาร์เรย์เข้าไปในฟังก์ชัน จะเป็นการส่งแบบ pass by value เหมือนกับชนิดข้อมูล int หรือ string ซึ่งฟังก์ชันจะได้รับเพียงสำเนาของอาร์เรย์เท่านั้น ดังนั้นการเปลี่ยนแปลงอาร์เรย์ในฟังก์ชันจะไม่ส่งผลต่ออาร์เรย์ต้นฉบับ
*/


func main() {
	// ประกาศอาร์เรย์ด้วยคีย์เวิร์ด var
	var arr1 [5]int
	// ประกาศอาร์เรย์แบบย่อ
	arr2 := [3]string{"apple", "bannana", "orange"}
	// ประกาศอาร์เรย์ด้วย ellipses (...)
	arr3 := [...]int{1, 2, 3, 4, 5}
	// การเข้าถึงข้อมูลในอาร์เรย์
	fmt.Println(arr2[0]) // output: apple
	// กำหนดค่าให้กับข้อมูลในอาร์เรย์
	arr1[2] = 10
	// หาความยาวของอาร์เรย์
	length := len(arr3) // length = 5
	fmt.Println(length)
	// วนซ้ำอาร์เรย์ด้วย for loop
	for i := 0; i < len(arr1); i++ {
		fmt.Println(arr1[i])
	}
	// วนซ้ำอาร์เรย์ด้วย range operator
	for index, value := range arr2 {
		fmt.Printf("Index: %d, Value: %s\n", index, value)
	}
}

/*
การอธิบาย code ข้างต้น:
1. ประกาศอาร์เรย์ `arr1` ด้วยคีย์เวิร์ด `var` โดยมีขนาด 5 และเป็นชนิดข้อมูล `int`
2. ประกาศอาร์เรย์ `arr2` แบบย่อ โดยมีขนาด 3 และเป็นชนิดข้อมูล `string` พร้อมกับกำหนดค่าเริ่มต้น
3. ประกาศอาร์เรย์ `arr3` ด้วย ellipses (...) โดยคอมไพเลอร์จะระบุขนาดตามจำนวนข้อมูลที่กำหนด
4. การเข้าถึงข้อมูลในอาร์เรย์ `arr2` ที่ดัชนี 0 ซึ่งจะแสดงผลเป็น "apple"
5. กำหนดค่า 10 ให้กับข้อมูลในอาร์เรย์ `arr1` ที่ดัชนี 2
6. หาความยาวของอาร์เรย์ `arr3` ด้วยฟังก์ชัน `len()` และเก็บค่าไว้ในตัวแปร `len`
7. วนซ้ำอาร์เรย์ `arr1` ด้วย for loop โดยใช้ตัวแปร `i` เป็นดัชนี และแสดงผลข้อมูลในแต่ละรอบ
8. วนซ้ำอาร์เรย์ `arr2` ด้วย range operator โดยได้ดัชนีและค่าของข้อมูลในแต่ละรอบ และแสดงผลดัชนีและค่านั้น ๆ
*/